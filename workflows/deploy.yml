name: deploy

on:
  workflow_dispatch:

jobs:
  provision-ecrs:
    name: provisions ECR instances ready for docker images
    runs-on: ubuntu-latest
    steps:
      - uses: action/checkout@v3
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
      - name: deploy ECRs
        working-directory: TERRAFORM_DIRECTORY
        run: |
          terraform init
          terraform apply -auto-approve -input=false

  build-containers:
    name: dockerises pipeline and pushes to ecr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: dockerise
        working-directory: WORKING_DIRECTORY
        run: |
          docker build -t ECR_NAME .
          docker tag ECR_NAME:latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/ECR_NAME:latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/ECR_NAME:latest

  deploy-cloud-infrastructure:
    name: provisions cloud infrastructure deploys pipeline to AWS
    runs-on: ubuntu-latest
    steps:
      - uses: action/checkout@v3
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
      - name: deploy terraform infrastructure
        working-directory: TERRAFORM_DIRECTORY
        run: |
          terraform init
          terraform apply -auto-approve -input=false
